{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "netanel-data-factory"
		},
		"ADLSGen2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ADLSGen2'"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'"
		},
		"LS_AzureBlobStorage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AzureBlobStorage'"
		},
		"ADLSGen2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://netanelml4757457030.dfs.core.windows.net"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://ADF2021.vault.azure.net/"
		},
		"RestService_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://login.microsoftonline.com/microsoft.onmicrosoft.com/oauth2/token"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Bulk Copy from Files to Database')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "GetGenericFileMetadataDataset",
								"type": "DatasetReference",
								"parameters": {
									"SourceContainer": {
										"value": "@pipeline().parameters.SourceContainer",
										"type": "Expression"
									},
									"SourceDirectory": {
										"value": "@pipeline().parameters.SourceDirectory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Files').output.childItems",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "CopyFiles",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"tableOption": "autoCreate"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"SourceContainer": {
													"value": "@pipeline().parameters.SourceContainer",
													"type": "Expression"
												},
												"SourceDirectory": {
													"value": "@pipeline().parameters.SourceDirectory",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSqlDatabaseSinkDataset",
											"type": "DatasetReference",
											"parameters": {
												"sinkTableName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"SourceContainer": {
						"type": "string"
					},
					"SourceDirectory": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-05-27T06:37:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GetGenericFileMetadataDataset')]",
				"[concat(variables('factoryId'), '/datasets/SourceDataset')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlDatabaseSinkDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy from REST into ADLS Gen2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFromRestToADLS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestResource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkDataset",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SinkContainer",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SinkDirectory",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "GetBearerToken",
						"description": "Use this Web activity to get bearer token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://login.microsoftonline.com/microsoft.onmicrosoft.com/oauth2/token",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": "grant_type=client_credentials&client_id=<service principal ID>&resource=<your resource>&client_secret=<service principal key>"
						}
					}
				],
				"parameters": {
					"SinkContainer": {
						"type": "string"
					},
					"SinkDirectory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Learning"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource')]",
				"[concat(variables('factoryId'), '/datasets/SinkDataset')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_DeltaLoadSQL2Blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupLastWatermarkValue",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlGenericTable",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "watermarktable"
								}
							}
						}
					},
					{
						"name": "LookupnewWatermarkValue",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select MAX(LastModifytime) as NewWatermarkValue\nfrom dbo.data_source_table",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlGenericTable",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "watermarktable"
								}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LookupLastWatermarkValue",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "LookupnewWatermarkValue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select *\nfrom data_source_table\nwhere LastModifytime between '@{activity('LookupLastWatermarkValue').output.firstRow.WatermarkValue}' and '@{activity('LookupnewWatermarkValue').output.firstRow.NewWatermarkValue}'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AzureSqlGenericTable",
								"type": "DatasetReference",
								"parameters": {
									"tableName": "data_source_table"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "CSVGenericBlobStorage",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "StoredProceduretoWriteWatermarkActivity",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "usp_write_watermark",
							"storedProcedureParameters": {
								"LastModifiedtime": {
									"value": {
										"value": "@{activity('LookupnewWatermarkValue').output.firstRow.NewWatermarkvalue}",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": {
										"value": "@activity('LookupLastWatermarkValue').output.firstRow.TableName",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference",
							"parameters": {
								"DBUsername": "etoro-adf"
							}
						}
					}
				],
				"folder": {
					"name": "Learning"
				},
				"annotations": [],
				"lastPublishTime": "2021-05-12T07:21:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlGenericTable')]",
				"[concat(variables('factoryId'), '/datasets/CSVGenericBlobStorage')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_MoviesFile2DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyMoviesToDB",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "data//moviesDB.csv"
							},
							{
								"name": "Destination",
								"value": "dbo.MoviesTable"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "movie",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "movie",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "title",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "title",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "genres",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "genres",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Rating",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Rating",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Rotton Tomato",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Rotton Tomato",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "MoviesDB",
								"type": "DatasetReference",
								"parameters": {
									"Container": "/data",
									"Filename": "moviesDB.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "SQLMoviesTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [
					"pipeline",
					"copy"
				],
				"lastPublishTime": "2021-05-26T18:07:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MoviesDB')]",
				"[concat(variables('factoryId'), '/datasets/SQLMoviesTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_TransformMoviesTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TransformMovies",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "GetMoviesCSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_TransformMovies",
								"type": "DataFlowReference",
								"parameters": {
									"GenreFilter": {
										"value": "'@{pipeline().parameters.GenreFilter}'",
										"type": "Expression"
									},
									"AggColumn": {
										"value": "@pipeline().parameters.AggColumn",
										"type": "Expression"
									},
									"FileContentMD5": {
										"value": "'@{activity('GetMoviesCSV').output.contentMD5}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"MoviesDBFile": {
										"Container": "adftutorial",
										"Filename": "moviesDB.csv",
										"Directory": "sample-data"
									},
									"Sink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "GetMoviesCSV",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "MoviesDB",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"contentMD5",
								"structure",
								"columnCount"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"parameters": {
					"GenreFilter": {
						"type": "string",
						"defaultValue": "Drama"
					},
					"AggColumn": {
						"type": "string",
						"defaultValue": "Rating"
					}
				},
				"annotations": [
					"pipeline",
					"dataflow"
				],
				"lastPublishTime": "2021-05-26T19:01:19Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DF_TransformMovies')]",
				"[concat(variables('factoryId'), '/datasets/MoviesDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseSinkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your destination data store.",
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBUsername": "etoro-adf"
					}
				},
				"parameters": {
					"sinkTableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().sinkTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlGenericTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBUsername": "etoro-adf"
					}
				},
				"parameters": {
					"tableName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "PersonID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "LastModifytime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVGenericBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@CONCAT('Incremental-', pipeline().RunId, '.txt')",
							"type": "Expression"
						},
						"folderPath": "incrementalcopy",
						"container": "adftutorial"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetGenericFileMetadataDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your source data store.",
				"linkedServiceName": {
					"referenceName": "ADLSGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceContainer": {
						"type": "string"
					},
					"SourceDirectory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().SourceDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().SourceContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoviesDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string",
						"defaultValue": "adftutorial"
					},
					"Filename": {
						"type": "string",
						"defaultValue": "moviesDB.csv"
					},
					"Directory": {
						"type": "string",
						"defaultValue": "sample-data"
					}
				},
				"folder": {
					"name": "Movies"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoviesParquetSink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Movies"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "adftutorial"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your REST/HTTP",
				"linkedServiceName": {
					"referenceName": "RestService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLMoviesTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBUsername": "etoro-adf"
					}
				},
				"folder": {
					"name": "Movies"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "movie",
						"type": "int",
						"precision": 10
					},
					{
						"name": "title",
						"type": "varchar"
					},
					{
						"name": "genres",
						"type": "varchar"
					},
					{
						"name": "year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Rating",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Rotton Tomato",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "MoviesTable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your Azure Data Lake Store",
				"linkedServiceName": {
					"referenceName": "ADLSGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your source data store.",
				"linkedServiceName": {
					"referenceName": "ADLSGen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"SourceContainer": {
						"type": "string"
					},
					"SourceDirectory": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().SourceDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().SourceContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ADLSGen2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSGen2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSGen2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ADLSGen2_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DBUsername": {
						"type": "String",
						"defaultValue": "etoro-adf"
					}
				},
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "netanel-etoro-adf-password"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('LS_AzureBlobStorage_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Every5minutes')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_DeltaLoadSQL2Blob",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2021-06-09T16:02:00Z",
						"endTime": "2021-06-09T16:20:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_DeltaLoadSQL2Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DF_TransformMovies')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MoviesDB",
								"type": "DatasetReference"
							},
							"name": "MoviesDBFile"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "MoviesParquetSink",
								"type": "DatasetReference"
							},
							"name": "Sink"
						}
					],
					"transformations": [
						{
							"name": "FilterYears"
						},
						{
							"name": "AggregateComedyRatings"
						},
						{
							"name": "AddContentMD5"
						}
					],
					"script": "parameters{\n\tGenreFilter as string,\n\tAggColumn as integer,\n\tFileContentMD5 as string\n}\nsource(output(\n\t\tmovie as integer,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as short,\n\t\tRating as short,\n\t\t{Rotton Tomato} as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdateFormats: ['dd/MM/yyyy'],\n\ttimestampFormats: ['MM/dd/yyyy HH:mm:ss']) ~> MoviesDBFile\nMoviesDBFile filter(between(year, 1910, 2000)) ~> FilterYears\nFilterYears aggregate(groupBy(year = $AggColumn),\n\tAverageAggColumn = avg($AggColumn)) ~> AggregateComedyRatings\nAggregateComedyRatings derive(FileContentMD5 = $FileContentMD5) ~> AddContentMD5\nAddContentMD5 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1) ~> Sink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MoviesDB')]",
				"[concat(variables('factoryId'), '/datasets/MoviesParquetSink')]"
			]
		}
	]
}